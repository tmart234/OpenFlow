name: Release ONNX Model

on:
  workflow_dispatch:
  # You can also trigger this on the completion of your ML training workflow
  # workflow_run:
  #   workflows: ["ML Training Workflow"]
  #   types:
  #     - completed
  #   branches:
  #     - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: pip install onnx bump2version
    
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: lstm_model_onnx_release

    - name: Determine new version tag
      id: new_version
      run: |
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Current version: $LATEST_TAG"
        NEW_TAG=$(bump2version --current-version $LATEST_TAG patch --dry-run --list | grep 'new_version=' | cut -d= -f2)
        echo "New version: $NEW_TAG"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: Release ${{ env.NEW_TAG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./model/lstm_model.onnx
        asset_name: lstm_model_${{ env.NEW_TAG }}.onnx
        asset_content_type: application/octet-stream
